create table if not exists "public"."message" (
    "id" bigint primary key generated by default as identity not null,
    "user_id" uuid not null default auth.uid() REFERENCES auth.users(id),
    "text" text not null,
    "created_at" timestamp with time zone not null default now()
);

CREATE OR REPLACE VIEW public.users
AS SELECT u.id,
    u.raw_user_meta_data ->> 'avatar_url'::text AS img_url,
    COALESCE(u.raw_user_meta_data ->> 'full_name'::TEXT, u.raw_user_meta_data ->> 'user_name'::TEXT) AS full_name
   FROM auth.users u;

begin;

-- remove the supabase_realtime publication
drop
  publication if exists supabase_realtime;

-- re-create the supabase_realtime publication with no tables
create publication supabase_realtime;

commit;

-- add a table called 'messages' to the publication
-- (update this to match your tables)
alter
  publication supabase_realtime add table message;
  
alter table
  message replica identity full;
